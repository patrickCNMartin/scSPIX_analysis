//nextflow.config
nextflow.enable.dsl=2

// --- Profiles ---
profiles {
   base {
        //beforeScript = 'source /home/martinp4/anaconda3/etc/profile.d/conda.sh'
        process {
            executor = 'slurm'
            queue = 'defq'
            cpus = 1
            memory = '64 GB'
            time = '24h'
            scratch = true
        }
        executor {
            queueSize = 10
        }
        conda {
            enabled = true
            cacheDir = "${projectDir}/conda_cache" 
            useMicromamba = false
            condaOptions = '--solver classic'
        }
        
    }
}

executor {
    queueSize       = 10
    submitRateLimit = '1 sec'
    pollInterval    = '60 sec'
}


// --- Analysis Params ---
params {
    dwl {
        run = false // if set the data will be downloaded
        visiumHD {
            url = [
                "https://cf.10xgenomics.com/samples/spatial-exp/3.0.0/Visium_HD_Human_Colon_Cancer_P2/Visium_HD_Human_Colon_Cancer_P2_binned_outputs.tar.gz",
                "https://cf.10xgenomics.com/samples/spatial-exp/3.0.0/Visium_HD_Human_Colon_Cancer_P2/Visium_HD_Human_Colon_Cancer_P2_spatial.tar.gz",
                "https://cf.10xgenomics.com/samples/spatial-exp/3.0.0/Visium_HD_Human_Colon_Cancer_P2/Visium_HD_Human_Colon_Cancer_P2_molecule_info.h5",
                "https://cf.10xgenomics.com/samples/spatial-exp/3.0.0/Visium_HD_Human_Colon_Cancer_P2/Visium_HD_Human_Colon_Cancer_P2_feature_slice.h5"
                ]
            rename = 'visiumHD_colcancer_'
        }
        stereo {
            url = 'https://ftp.cngb.org/pub/SciRAID/stomics/STDS0000058/Bin1_matrix/E16.5_E1S3_GEM_bin1.tsv.gz'
            rename = 'Stereo_seq_embryo_'
        }
        data = 'data/'
    }
    containers {
        check_and_build = true
        containerDir = "${baseDir}/containers"
        containerCache = "${baseDir}/container_cache"
    }
    scrna_r {
        run = false
    }
}

// --- Apptainer ---
workDir = 'work/'
cleanup = true
resume  = true

singularity {
    enabled    = false
    autoMounts = true
    cacheDir   = 'container_cache/'
}

docker {
    enabled    = true
    autoMounts = true
    cacheDir   = 'container_cache/'
}

// --- Reporting ---
timeline {
    enabled = true
    file    = 'logs/timeline.html'
}

report {
    enabled = true
    file    = 'logs/report.html'
}

trace {
    enabled = true
    file    = 'logs/trace.txt'
    overwrite = true
}

dag {
    enabled = true
    file    = 'logs/dag.png'
}
